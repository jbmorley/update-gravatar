#!/usr/bin/env python

import urllib
import hashlib
import subprocess
import urllib
import urlparse
import os
import xml.dom.minidom
import argparse
import time
import tempfile
import shutil

# Constants.
PICTURE_FILE = "~/.gravatar.jpg"
SIZE = 200

# Derived properties.
picture = os.path.expanduser(PICTURE_FILE) 

def dscl(command, arguments):
  user = os.path.expanduser("~")
  result = subprocess.check_output(["dscl", ".", command, user] + arguments,
                                   stderr=subprocess.STDOUT)
  return result

def dscl_read(key):
  return dscl("-read", [key])

def dscl_delete(key):
  return dscl("-delete", [key])

def dscl_create(key, value):
  return dscl("-create", [key, value])

def set_profile_picture(path):
  try:
    print dscl_delete("JPEGPhoto")
    print dscl_delete("Picture")
    print dscl_create("Picture", path)
  except:
    print "Unable to set the profile picture. Did you run with administrative privileges?"
    exit(1)

def update(email):

  # Construct the url.
  gravatar_url = "http://www.gravatar.com/avatar/" + hashlib.md5(email.lower()).hexdigest() + "?"
  gravatar_url += urllib.urlencode({'s':str(SIZE)})

  # Create a temporary location to download the file.
  temp_dir = tempfile.mkdtemp()
  temp_file = os.path.join(temp_dir, "gravatar.jpg")

  try:

    # Download the profile picture.
    urllib.urlretrieve(gravatar_url, temp_file)

    # Attempt to set the picture using the temporary location.
    # This will allow us to know if we have sufficient privileges
    # to set the photo before setting it destructively.
    # Unfortunately this doesn't work as deleting items doesn't require
    # admin privilege but creating them does.
    set_profile_picture(temp_file)

    # Copy the picture to the final destination (once we know we have
    # successfully retieved it).
    if (os.path.exists(picture)):
      os.unlink(picture)
    shutil.move(temp_file, picture)
    path = os.path.abspath(picture)

    # Set the picture.
    set_profile_picture(path)

  finally:
    
    # Clean up the temporary location.
    shutil.rmtree(temp_dir)

def main():
  
  parser = argparse.ArgumentParser(description = "Set your account picture to your Gravatar.\n\nN.B. Must be run with administrative privileges (e.g. using sudo).", formatter_class=argparse.RawDescriptionHelpFormatter)
  parser.add_argument('email', help = 'Email account for which to fetch the avatar')
  options = parser.parse_args()

  update(options.email)


if __name__ == '__main__':
  main()

